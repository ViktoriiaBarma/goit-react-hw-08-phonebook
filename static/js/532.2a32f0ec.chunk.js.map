{"version":3,"file":"static/js/532.2a32f0ec.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.jsx","redux/contacts/selectors.js","components/Contact/Contact.jsx","components/ContactList/ContactList.jsx","components/Modal/Modal.styled.jsx","components/Modal/Modal.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/ContactsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 12px;\n  margin-bottom: 16px;\n  padding: 8px;\n  max-width: 100%;\n  width: 500px;\n`;\n\nexport const FormField = styled.label`\n  display: flex;\n flex-direction: row;\n    align-items: center;\n    justify-content: center;\n  font-size: 20px;\n  max-width: 100%;\n  width: 500px;\n  text-shadow: rgb(255, 255, 255) 0px 1px 1px;\n`;\n\nexport const LabelWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  gap: 8px;\n  margin-left: 8px;\n`;\n\nexport const LabelSpan = styled.span`\n  padding-left: 5px;\n`;\n\nexport const FieldFormik = styled.input`\n  padding: 8px 16px;\nwidth: 300px;\n  border: 0px;\n  outline: 0px;\n  border-radius: 8px;\n\n\n  color: rgb(6, 58, 54);\n  background-color: #EDE4F7;\n  box-shadow: rgb(139, 167, 147) 1px 1px 3px inset,\n    rgb(255, 255, 255) -1px -1px 5px inset;\n  font-style: italic;\n  text-shadow: rgb(255, 255, 255) 0px 1px 1px;\n  font-size: 14px;\n`;\n\n\nexport const StyledButton = styled.button`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  gap: 4px;\n  padding: 8px 16px;\n  max-width: 100%;\n  border: none;\n  outline: none;\n  border-radius: 8px;\n  box-shadow: rgba(0, 0, 0, 0.24) 10px 10px 5px 0px;\n  transition: all 0.2s ease-in-out 0s;\n  background-color: #C4A7E7;\n  color: rgb(255, 255, 255);\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    background-color: #8974a1;\n    color: rgb(6, 58, 54);\n    box-shadow: rgb(255, 255, 255) -2px -2px 5px, rgb(139, 167, 147) 2px 2px 5px;\n  }\n`;","import { useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contacts/contact-operations';\nimport { IoMdPersonAdd } from 'react-icons/io';\nimport { BsFillTelephoneFill, BsPersonFill } from 'react-icons/bs';\nimport {\n  Form,\n  FormField,\n  FieldFormik,\n  StyledButton,\n  LabelWrapper,\n  LabelSpan,\n} from './ContactForm.styled';\n// import { option } from 'utils/toastifyOptions';\n// import { toast } from 'react-toastify';\n// import { useSelector } from 'react-redux';\n// import { getContacts } from 'redux/contacts/selectors';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n // const contacts = useSelector(getContacts);\n  \n  //   const contacts = useSelector(getContacts);\n\n  // const handleSubmit = (value) => {\n  //   if (contacts.some(({ name }) => name === value.name)) {\n  //     return toast('contact alredy added', option);\n  //   }\n  //   dispatch(addContact(value));\n  //   toast('contact added', option);\n  // };\n\n\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    const name = form.name.value;\n    const number = form.number.value;\n\n\n    const obj = {\n      name,\n      number\n    }\n      dispatch(addContact(obj));\nform.reset()\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <LabelWrapper>\n        <FormField htmlFor=\"name\">\n          <BsPersonFill />\n          <LabelSpan>Name</LabelSpan>\n        </FormField>\n      </LabelWrapper>\n      <FieldFormik\n        id=\"name\"\n        name=\"name\"\n        type=\"text\"\n        autoComplete=\"name\"\n        placeholder=\"Name\"\n        required\n      />\n\n      <LabelWrapper>\n        <FormField htmlFor=\"number\">\n          <BsFillTelephoneFill />\n          <LabelSpan>Number</LabelSpan>\n        </FormField>\n      </LabelWrapper>\n      <FieldFormik\n        type=\"tel\"\n        name=\"number\"\n        autoComplete=\"number\"\n        required\n        placeholder=\"+38-050-123-45-67\"\n      />\n      <StyledButton type=\"submit\">\n        <IoMdPersonAdd size=\"16\" />\n        Add contact\n      </StyledButton>\n    </Form>\n  );\n};\n\nexport default ContactForm;\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n        flex-direction: column;\n        gap: 16px;\n        padding: 8px 16px;\n        max-width: 100%;\n        width: 300px;\n}\n`;\nexport const Item = styled.li`\n  display: flex;\n  justify-content: space-between;\n  -webkit-box-align: center;\n  align-items: center;\n  gap: 16px;\n    font-size: 14px;\n`;\n\nexport const Btn = styled.button`\n  padding: 4px 8px;\n  border: none;\n  outline: none;\n  border-radius: 8px;\n  color: rgb(255, 255, 255);\n  background-color: #C4A7E7;\n  box-shadow: rgba(0, 0, 0, 0.24) 10px 10px 5px 0px;\n  transition: all 0.2s ease-in-out 0s;\n\n  &:hover,\n  &:focus {\n    background-color: #8974a1;\n    color: rgb(6, 58, 54);\n    box-shadow: rgb(255, 255, 255) -2px -2px 5px, rgb(139, 167, 147) 2px 2px 5px;\n  }\n`;\n\nexport const ContactPhone = styled.span`\npadding-left: 10px;\n`;","export const getContacts = state => state.contacts.contacts.items;\nexport const getIsLoading = state => state.contacts.contacts.isLoading;\nexport const getError = state => state.contacts.contacts.error;\n//export const getupdatedContact = state => state.contacts.contacts.updatedContact;\nexport const getFilter = state=> state.contacts.filter;\nexport const getModal = state => state.modal.isOpen;\nexport const getState = state => state;","import { deleteContact } from 'redux/contacts/contact-operations';\nimport { Btn,ContactPhone } from '../ContactList/ContactList.styled';\nimport { useDispatch } from 'react-redux';\n\n\nconst Contact = ({ contact }) => {\n  const dispatch = useDispatch();\n  const handleDelete = () => dispatch(deleteContact(contact.id));\n  return (\n    <>\n       <p> {contact.name}:\n        <ContactPhone>{contact.number}</ContactPhone>\n      </p>\n      <Btn onClick={handleDelete}>delete</Btn>\n    </>\n  );\n};\nexport default Contact;","import React from \"react\";\nimport { Item, List } from './ContactList.styled';\nimport { useSelector } from \"react-redux\";\nimport { getContacts, getFilter } from \"redux/contacts/selectors\";\nimport Contact from \"../Contact/Contact\";\n\nconst ContactList = () => {\n\n  const contacts = useSelector(getContacts);\n   console.log(contacts);\n  const filtered = useSelector(getFilter);\n  console.log(filtered);\n  \nconst normalizedFilter = filtered.toLowerCase();\n  const filteredContacts = contacts.filter(\n    ({ name, number }) =>\n      name.toLowerCase().trim().includes(normalizedFilter) ||\n      number.trim().includes(normalizedFilter)\n  );\n\n  //   const filteredContacts = contacts.filter(contact =>\n  //   contact.name.toLowerCase().includes(filtered.toLowerCase())\n  // );\n  \n\n   return (\n    <List>\n      {filteredContacts?.map((contact) => {\n        return (\n          <Item key={contact.id}>\n             <Contact key={contact.id} contact={contact} />\n          </Item>\n        );\n      })}\n    </List>\n  );\n};\n\nexport default ContactList;","import styled from 'styled-components';\n\nexport const CloseBtn = styled.button`\n  position: absolute;\n  top: 5px;\n  right: 5px;\n  padding-top: 5px;\n  padding-bottom:5px;\n  padding-left: 5px;\n  padding-right: 5px;\n\n  width: 30px;\n  height: 30px;\n  border: none;\n  outline: none;\n  border-radius: 50%;\n  color: black;\n  background-color: transparent;\n  transition: all 0.2s ease-in-out;\n\n  &:hover,\n  &:focus {\n    box-shadow: inset -1px -1px 1px #ffffff, inset 1px 1px 1px #8e9aaf;\n\n   \n  }\n`;\n\n\nexport const Backdrop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background-color: rgba(0,0,0,0.5);\n`\nexport const Content = styled.div`\n  position: absolute;\n  \n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  min-height: 200px;\n  width: 600px;\n  max-width: 95%;\n  padding: 80px 32px;\n  background-color: #fff;\n  border-radius: 3px;\n`","import { useDispatch } from 'react-redux';\nimport { CloseBtn, Content,Backdrop } from './Modal.styled';\nimport { createPortal } from 'react-dom';\nimport { closeModal } from 'redux/contacts/modal-slice';\nimport { RxCross2 } from 'react-icons/rx';\nimport ContactUpdate from 'components/ContactUpdate/ContactUpdate';\n\n\nconst modalRoot = document.querySelector('#modal-root');\nconst Modal = () => {\n  const dispatch = useDispatch();\n\n  const hendleCloseModal = e => {\n    if (e.target === e.currentTarget) {\n      dispatch(closeModal());\n    }\n  };\n\n  return createPortal(\n    <Backdrop onClick={hendleCloseModal}>\n      <Content>\n          <CloseBtn\n            onClick={() => {\n              dispatch(closeModal());\n            }}\n          >\n            <RxCross2 />\n          </CloseBtn>\n        <ContactUpdate />\n      </Content>\n    </Backdrop>,\n    modalRoot\n  );\n};\n\nexport default Modal;","import styled from 'styled-components';\n\nexport const LabelDescr = styled.label`\ndisplay: flex;\n    align-items: center;\n        flex-direction: column;\n        gap: 8px;\n        color: #000;\n`;\n\nexport const Input = styled.input`\n        padding: 8px 16px;\n        max-width: 100%;\n        width: 300px;\n        border: 0px;\n        outline: 0px;\n        border-radius: 8px;\n        background-color: #EDE4F7;\n        color: #000;\n        box-shadow: rgb(139, 167, 147) 1px 1px 3px inset, rgb(255, 255, 255) -1px -1px 5px inset;\n        font-style: italic;\n        font-size: 14px;\n}\n`;","import { useDispatch } from 'react-redux';\nimport { filterContact } from 'redux/contacts/contacts-slice';\nimport { Input, LabelDescr } from './Filter.styled';\n\nconst Filter = () => {\n   const dispatch = useDispatch()\n  const hendleFilter = (e) => {\n    const search = e.currentTarget\n    console.log(search.value)\n    dispatch(filterContact(search.value))\n  }\n\n  return (\n    <LabelDescr htmlFor=\"filter\">\n      Find contacts by name\n      <Input name=\"filter\" type=\"text\" onChange={hendleFilter}  debounceTimeout={500}/>\n    </LabelDescr>\n  );\n};\n\nexport default Filter;","import ContactForm from '../components/ContactForm/ContactForm';\nimport ContactList from '../components/ContactList/ContactList';\nimport Modal from 'components/Modal/Modal';\nimport Filter from '../components/Filter/Filter';\nimport { useEffect } from 'react';\nimport { getError, getModal } from 'redux/contacts/selectors';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/contact-operations';\n//import { Loader } from '../components/Loader/Loader';\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n // const isLoading = useSelector(getIsLoading);\n  const error = useSelector(getError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const isOpen = useSelector(getModal);\n\n\n  if (error) {\n  return <div>Something went wrong...</div>\n}\n\n  return (\n    <>\n       {isOpen && <Modal />}\n       <ContactForm />\n      <Filter />\n      <ContactList />\n      {/* {isLoading ? <Loader /> : <ContactList />}\n      <Loader /> */}\n    </> \n  );\n};\nexport default ContactsPage;"],"names":["Form","styled","_templateObject","_taggedTemplateLiteral","FormField","_templateObject2","LabelWrapper","_templateObject3","LabelSpan","_templateObject4","FieldFormik","_templateObject5","StyledButton","_templateObject6","dispatch","useDispatch","_jsxs","onSubmit","e","preventDefault","form","currentTarget","obj","name","value","number","addContact","reset","children","_jsx","htmlFor","BsPersonFill","id","type","autoComplete","placeholder","required","BsFillTelephoneFill","IoMdPersonAdd","size","List","Item","Btn","ContactPhone","getContacts","state","contacts","items","getError","error","getFilter","filter","getModal","modal","isOpen","_ref","contact","_Fragment","onClick","deleteContact","useSelector","console","log","filtered","normalizedFilter","toLowerCase","filteredContacts","trim","includes","map","Contact","CloseBtn","Backdrop","Content","modalRoot","document","querySelector","createPortal","target","closeModal","RxCross2","ContactUpdate","LabelDescr","Input","onChange","search","filterContact","debounceTimeout","useEffect","fetchContacts","Modal","ContactForm","Filter","ContactList"],"sourceRoot":""}