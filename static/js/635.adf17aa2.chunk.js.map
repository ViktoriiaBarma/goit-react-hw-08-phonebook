{"version":3,"file":"static/js/635.adf17aa2.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.jsx","utils/toastifyOptions.jsx","redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.jsx","components/Contact/Contact.styled.jsx","components/Modal/Modal.styled.jsx","components/Contact/Contact.jsx","components/ContactList/ContactList.jsx","components/ContactUpdate/ContactUpdate.jsx","components/Modal/Modal.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/ContactsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 12px;\n  margin-bottom: 16px;\n  padding: 8px;\n  max-width: 100%;\n  width: 500px;\n`;\n\nexport const FormField = styled.label`\n  display: flex;\n flex-direction: row;\n    align-items: center;\n    justify-content: center;\n  font-size: 20px;\n  max-width: 100%;\n  width: 500px;\n  text-shadow: rgb(255, 255, 255) 0px 1px 1px;\n`;\n\nexport const LabelWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  gap: 8px;\n  margin-left: 8px;\n`;\n\nexport const LabelSpan = styled.span`\n  padding-left: 5px;\n`;\n\nexport const FieldFormik = styled.input`\n  padding: 8px 16px;\nwidth: 300px;\n  border: 0px;\n  outline: 0px;\n  border-radius: 8px;\n\n\n  color: rgb(6, 58, 54);\n  background-color: #EDE4F7;\n  box-shadow: rgb(139, 167, 147) 1px 1px 3px inset,\n    rgb(255, 255, 255) -1px -1px 5px inset;\n  font-style: italic;\n  text-shadow: rgb(255, 255, 255) 0px 1px 1px;\n  font-size: 14px;\n`;\n\n\nexport const StyledButton = styled.button`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  gap: 4px;\n  padding: 8px 16px;\n  max-width: 100%;\n  border: none;\n  outline: none;\n  border-radius: 8px;\n  box-shadow: rgba(0, 0, 0, 0.24) 10px 10px 5px 0px;\n  transition: all 0.2s ease-in-out 0s;\n  background-color: #C4A7E7;\n  color: rgb(255, 255, 255);\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    background-color: #8974a1;\n    color: rgb(6, 58, 54);\n    box-shadow: rgb(255, 255, 255) -2px -2px 5px, rgb(139, 167, 147) 2px 2px 5px;\n  }\n`;","export const option = {\n    position: 'bottom-right',\n    autoClose: 5000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n    theme: 'colored',\n  }\n","export const getContacts =({contacts}) => contacts.items;\nexport const getIsLoading = ({contacts}) => contacts.isLoading;\nexport const getError = ({contacts}) => contacts.error;\nexport const getupdatedContact = ({contacts}) => contacts.updatedContact;\nexport const getFilter = state => state.filter.filter;\nexport const getFilterAlphabet = state => state.filter.filterAlphabet;\nexport const getModal = state => state.modal.isOpen;\nexport const getState = state => state;","import { useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contacts/contact-operations';\nimport { IoMdPersonAdd } from 'react-icons/io';\nimport { BsFillTelephoneFill, BsPersonFill } from 'react-icons/bs';\nimport {\n  Form,\n  FormField,\n  FieldFormik,\n  StyledButton,\n  LabelWrapper,\n  LabelSpan,\n} from './ContactForm.styled';\nimport { option } from 'utils/toastifyOptions';\nimport { toast } from 'react-toastify';\nimport { useSelector } from 'react-redux';\nimport { getContacts } from 'redux/contacts/selectors';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n\n  const handleSubmit = (value, { resetForm }) => {\n    if (contacts.some(({ name }) => name === value.name)) {\n      return toast('contact alredy added', option);\n    }\n    dispatch(addContact(value));\n    resetForm();\n    toast('contact added', option);\n  };\n  return (\n    <Form initialValues={{ name: '', number: '' }} onSubmit={handleSubmit}>\n      <LabelWrapper>\n        <FormField htmlFor=\"name\">\n          <BsPersonFill />\n          <LabelSpan>Name</LabelSpan>\n        </FormField>\n      </LabelWrapper>\n      <FieldFormik\n        id=\"name\"\n        name=\"name\"\n        type=\"text\"\n        autoComplete=\"name\"\n        placeholder=\"Name\"\n        required\n      />\n\n      <LabelWrapper>\n        <FormField htmlFor=\"number\">\n          <BsFillTelephoneFill />\n          <LabelSpan>Number</LabelSpan>\n        </FormField>\n      </LabelWrapper>\n      <FieldFormik\n        type=\"tel\"\n        name=\"number\"\n        autoComplete=\"number\"\n        required\n        placeholder=\"+38-050-123-45-67\"\n      />\n      <StyledButton type=\"submit\">\n        <IoMdPersonAdd size=\"16\" />\n        Add contact\n      </StyledButton>\n    </Form>\n  );\n};\n\nexport default ContactForm;\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n        flex-direction: column;\n        gap: 16px;\n        padding: 8px 16px;\n        max-width: 100%;\n        width: 300px;\n}\n`;\nexport const Item = styled.li`\n  display: flex;\n  justify-content: space-between;\n  -webkit-box-align: center;\n  align-items: center;\n  gap: 16px;\n    font-size: 14px;\n`;\n\nexport const Btn = styled.button`\n  padding: 4px 8px;\n  border: none;\n  outline: none;\n  border-radius: 8px;\n  color: rgb(255, 255, 255);\n  background-color: #C4A7E7;\n  box-shadow: rgba(0, 0, 0, 0.24) 10px 10px 5px 0px;\n  transition: all 0.2s ease-in-out 0s;\n\n  &:hover,\n  &:focus {\n    background-color: #8974a1;\n    color: rgb(6, 58, 54);\n    box-shadow: rgb(255, 255, 255) -2px -2px 5px, rgb(139, 167, 147) 2px 2px 5px;\n  }\n`;\n\nexport const ContactPhone = styled.span`\npadding-left: 10px;\n`;","import styled from 'styled-components'\n\nexport const Btn = styled.button`\n  padding: 4px 8px;\n  border: none;\n  outline: none;\n  border-radius: 8px;\n  color: rgb(255, 255, 255);\n  background-color: #C4A7E7;\n  box-shadow: rgba(0, 0, 0, 0.24) 10px 10px 5px 0px;\n  transition: all 0.2s ease-in-out 0s;\n\n  &:hover,\n  &:focus {\n    background-color: #8974a1;\n    color: rgb(6, 58, 54);\n    box-shadow: rgb(255, 255, 255) -2px -2px 5px, rgb(139, 167, 147) 2px 2px 5px;\n  }\n`;\n\nexport const ContactPhone = styled.span`\npadding-left: 10px;\n`;","import styled from 'styled-components';\n\nexport const CloseBtn = styled.button`\n  position: absolute;\n  top: 5px;\n  right: 5px;\n  padding-top: 5px;\n  padding-bottom:5px;\n  padding-left: 5px;\n  padding-right: 5px;\n\n  width: 30px;\n  height: 30px;\n  border: none;\n  outline: none;\n  border-radius: 50%;\n  color: black;\n  background-color: transparent;\n  transition: all 0.2s ease-in-out;\n\n  &:hover,\n  &:focus {\n    box-shadow: inset -1px -1px 1px #ffffff, inset 1px 1px 1px #8e9aaf;\n\n   \n  }\n`;\n\n\nexport const Backdrop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background-color: rgba(0,0,0,0.5);\n`\nexport const Content = styled.div`\n  position: absolute;\n  \n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  min-height: 200px;\n  width: 600px;\n  max-width: 95%;\n  padding: 80px 32px;\n  background-color: #fff;\n  border-radius: 3px;\n`","import { deleteContact } from 'redux/contacts/contact-operations';\nimport { useDispatch } from 'react-redux';\nimport { RxCross2, RxUpdate } from 'react-icons/rx';\nimport { ContactPhone } from './Contact.styled';\nimport { CloseBtn } from 'components/Modal/Modal.styled';\nimport { openModal } from 'redux/contacts/modal-slice';\nimport { getUpdatetContactId } from 'redux/contacts/contacts-slice';\n\nconst Contact = ({ contact }) => {\n  const dispatch = useDispatch();\n  const handleDelete = () => dispatch(deleteContact(contact.id));\n\n  const hendleOpenModal = () => {\n    dispatch(openModal());\n    dispatch(getUpdatetContactId(contact));\n  };\n\n  return (\n    <>\n      <li key={contact.id}>\n        <p>\n          {' '}\n          {contact.name}:<ContactPhone>{contact.phone}</ContactPhone>\n        </p>\n        <button onClick={hendleOpenModal}>\n          <RxUpdate />\n        </button>\n        <CloseBtn onClick={handleDelete}>\n          {' '}\n          <RxCross2 />\n        </CloseBtn>\n      </li>\n    </>\n  );\n};\n\nexport default Contact;\n","import {  List } from './ContactList.styled';\nimport { useSelector } from \"react-redux\";\nimport { getContacts, getFilter } from \"redux/contacts/selectors\";\nimport Contact from \"../Contact/Contact\";\n\nconst ContactList = () => {\n\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(getFilter);\n\n  const filteredContacts = contacts.filter(\n      contact =>\n        contact.name.toLowerCase().includes(filter.toLowerCase()) ||\n        contact.number.toLowerCase().includes(filter.toLowerCase())\n    );\n  \n   return (\n    <List>\n       {filteredContacts &&\n        filteredContacts.map(contact => (\n          <Contact key={contact.id} contact={contact} />\n        ))}\n    </List>\n  );\n};\n\nexport default ContactList;","import {\n  Form,\n  FormField,\n  FieldFormik,\n  StyledButton,\n  LabelWrapper,\n  LabelSpan,\n} from '../ContactForm/ContactForm.styled';\nimport { BsFillTelephoneFill, BsPersonFill } from 'react-icons/bs';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { closeModal } from 'redux/contacts/modal-slice';\nimport { updateContact } from 'redux/contacts/contact-operations';\nimport { getupdatedContact } from 'redux/contacts/selectors';\n\nconst ContactUpdate = () => {\n  const dispatch = useDispatch();\n  const { id, name, number } = useSelector(getupdatedContact);\n  const handleSubmit = (value, { resetForm }) => {\n    dispatch(updateContact({ id, value }));\n    resetForm();\n    dispatch(closeModal());\n  };\n    \nreturn (\n  <Form initialValues={{ name: '', number: '' }} onSubmit={handleSubmit}>\n    <LabelWrapper>\n      <FormField htmlFor=\"name\">\n        <BsPersonFill />\n        <LabelSpan>Name</LabelSpan>\n      </FormField>\n    </LabelWrapper>\n    <FieldFormik\n      id=\"name\"\n      name=\"name\"\n      type=\"text\"\n      autoComplete=\"name\"\n      placeholder={name}\n      required\n    />\n\n    <LabelWrapper>\n      <FormField htmlFor=\"number\">\n        <BsFillTelephoneFill />\n        <LabelSpan>Number</LabelSpan>\n      </FormField>\n    </LabelWrapper>\n    <FieldFormik\n      id=\"number\"\n      type=\"text\"\n      name=\"number\"\n      autoComplete=\"number\"\n      required\n      placeholder={number}\n    />\n    <StyledButton type=\"submit\">Update contact</StyledButton>\n  </Form>\n);\n};\n\nexport default ContactUpdate;","import { useDispatch } from 'react-redux';\nimport { CloseBtn, Content,Backdrop } from './Modal.styled';\nimport { createPortal } from 'react-dom';\nimport { closeModal } from 'redux/contacts/modal-slice';\nimport { RxCross2 } from 'react-icons/rx';\nimport ContactUpdate from 'components/ContactUpdate/ContactUpdate';\n\n\nconst modalRoot = document.querySelector('#modal-root');\nconst Modal = () => {\n  const dispatch = useDispatch();\n\n  const hendleCloseModal = e => {\n    if (e.target === e.currentTarget) {\n      dispatch(closeModal());\n    }\n  };\n\n  return createPortal(\n    <Backdrop onClick={hendleCloseModal}>\n      <Content>\n          <CloseBtn\n            onClick={() => {\n              dispatch(closeModal());\n            }}\n          >\n            <RxCross2 />\n          </CloseBtn>\n        <ContactUpdate />\n      </Content>\n    </Backdrop>,\n    modalRoot\n  );\n};\n\nexport default Modal;","import styled from 'styled-components';\n\nexport const LabelDescr = styled.label`\ndisplay: flex;\n    align-items: center;\n        flex-direction: column;\n        gap: 8px;\n        color: #000;\n`;\n\nexport const Input = styled.input`\n        padding: 8px 16px;\n        max-width: 100%;\n        width: 300px;\n        border: 0px;\n        outline: 0px;\n        border-radius: 8px;\n        background-color: #EDE4F7;\n        color: #000;\n        box-shadow: rgb(139, 167, 147) 1px 1px 3px inset, rgb(255, 255, 255) -1px -1px 5px inset;\n        font-style: italic;\n        font-size: 14px;\n}\n`;","import { useDispatch } from 'react-redux';\nimport { filterContact } from 'redux/contacts/filter-slice';\nimport { Input, LabelDescr } from './Filter.styled';\nimport { CloseBtn } from 'components/Modal/Modal.styled';\nimport { RxCross2 } from 'react-icons/rx';\n\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleFilter = e => {\n    if (e.currentTarget.value) {\n      e.currentTarget.parentNode.children[2].classList.remove('hidden');\n    } else {\n      e.currentTarget.parentNode.children[2].classList.add('hidden');\n    }\n    dispatch(filterContact(e.currentTarget.value));\n  };\n\n const clearFilter = e => {\n    e.currentTarget.parentNode.children[1].value = '';\n    dispatch(filterContact(e.currentTarget.parentNode.children[1].value));\n    e.currentTarget.classList.add('hidden');\n  };\n  \n  return (\n    <LabelDescr htmlFor=\"filter\" initialValues={{ email: '', password: '' }}>\n      Find contacts by name\n      <Input  id=\"name\"\n              name=\"filter\"\n              type=\"text\"\n              placeholder=\"Search contact\"\n        onChange={handleFilter} />\n       <CloseBtn onClick={clearFilter}\n            >\n              <RxCross2 />\n            </CloseBtn>\n    </LabelDescr>\n  );\n};\n\nexport default Filter;","import ContactForm from '../components/ContactForm/ContactForm';\nimport ContactList from '../components/ContactList/ContactList';\nimport Modal from 'components/Modal/Modal';\nimport Filter from '../components/Filter/Filter';\nimport { useEffect } from 'react';\nimport { getError, getIsLoading, getModal } from 'redux/contacts/selectors';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/contact-operations';\nimport { Loader } from '../components/Loader/Loader';\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoading);\n  const error = useSelector(getError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const isOpen = useSelector(getModal);\n  return (\n    <>\n      {isOpen && <Modal />}\n      <ContactForm />\n      <Filter />\n      <br />\n      {isLoading && !error ? <Loader /> : <ContactList />}\n      {/* <Loader /> */}\n    </>\n  );\n};\nexport default ContactsPage;"],"names":["Form","styled","_templateObject","_taggedTemplateLiteral","FormField","_templateObject2","LabelWrapper","_templateObject3","LabelSpan","_templateObject4","FieldFormik","_templateObject5","StyledButton","_templateObject6","option","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","getContacts","_ref","contacts","items","getIsLoading","_ref2","isLoading","getError","_ref3","error","getupdatedContact","_ref4","updatedContact","getFilter","state","filter","getModal","modal","isOpen","dispatch","useDispatch","useSelector","_jsxs","initialValues","name","number","onSubmit","value","resetForm","some","toast","addContact","children","_jsx","htmlFor","BsPersonFill","id","type","autoComplete","placeholder","required","BsFillTelephoneFill","IoMdPersonAdd","size","List","ContactPhone","CloseBtn","Backdrop","Content","contact","_Fragment","phone","onClick","openModal","getUpdatetContactId","RxUpdate","deleteContact","RxCross2","filteredContacts","toLowerCase","includes","map","Contact","_useSelector","updateContact","closeModal","modalRoot","document","querySelector","createPortal","e","target","currentTarget","ContactUpdate","LabelDescr","Input","email","password","onChange","parentNode","classList","remove","add","filterContact","useEffect","fetchContacts","Modal","ContactForm","Filter","Loader","ContactList"],"sourceRoot":""}